2012-05-29  Dominique Dumont  <domi.dumont@free.fr> 2.018

  * Application changes:
    + Debian::Dependency: Added a check and fix for debhelper version
      requirement taking into account compat value. This check is
      available only with full dpkg model (i.e. "cme xxx dpkg"
      command). It is disabled when using only dpkg-contol model ("cme
      xxx dpkg-control").
    * Debian::Dpkg model: fix default Vcs-Git URL for debian-perl packages

  * Framework changes:
    * Value:
      * avoid issuing the same warning twice
      * send a notif warning only when default data is different
        from current data as already seen by user (i.e.  // )
    * cme: better formatting when printing changes
    * WarpedNode: Don't call notify_change when not needed.
    * added a note parameter for notify_change
    * Instance: initial_load default value is now 0. 
    * Node: correctly set initial_load mode when init is called 
      recursively

2012-05-21  Dominique Dumont  <domi.dumont@free.fr> 2.017

   * Framework changes:
        * Fix missing YAML dependency in configure require

2012-05-20  Dominique Dumont  <domi.dumont@free.fr> 2.016

   * Framework changes:
        * Having dependencies in prereq does not mean they are listed
	in runtime require. The dependency list is now duplicated to have
	them in prereq (for smoke tests) and runtime require. This should
	help smoke tests for modules depending on Config::Model
	* Fixed small doc mistake in Tester

2012-05-14  Dominique Dumont  <domi.dumont@free.fr> 2.015

    * Application changes:
        * Copyright model: replace migrate_keys_from with new 
	   migrate_values_from. This simplifies the model

    * Framework changes: 
	  + List or Hash: added migrate_values_from to enable migration 
	    from another hash or list. migrate_keys_from for list element
	    is now deprecated.
        * List, Hash, Value: ensure that migration is done after initial
	  load, i.e. once all data from configuration file is loaded.
        * AnyId, List, Hash: deprecated get_all_indexes in favor of 
	  fetch_all_indexes
        * Value:
            * make sure that setting a default value triggers
	      notify_change so the resulting modification in the 
	      config file can be saved
            * don't trigger notify_change with update undef -> undef

    * Test changes:
        * Tester: added file_contents_like and file_contents_unlike tests

2012-05-03  Dominique Dumont  <domi.dumont@free.fr> 2.014

    * Application changes:
	* cme: list changes before saving data (unless save is handled by
  	  user interface) (HEAD, master)
	* Dpkg backend: reworked the internal data structure used between
	  DpkgSyntax and the other modules. The new data structure feature
	  the file line number to provide error messages with the line
	  number where the error was found. This patch also tracks what was
	  changed during parsing (see "altered" keyword) to call
	  change_notify with new option "really => 1" (closes debian #670441)

    * Framework changes:
	+ all: added tracking of changes performed by user. The change list can
	  retrieved from Instance object with list_changes method (this list can be
	  cleared with clear_changes).
	+ Depends on Text::Diff

2012-04-06  Dominique Dumont  <domi.dumont@free.fr> 2.013

    * Application changes:
	* Debian Dpkg model: Moved libtiff4 transition warning
	  from source Build-Depends to binary Depends

    * Framework changes:
	Model doc generation: small formatting fix to avoid Pod::Html
	errors with Debian/Dpkg/Source.pod (should fix ActiveState breakage)

    * Test changes:
	* multitrap tests: really ignore warnings coming from Text::Balanced
        (which pop up in Perl smoke tests with perl 5.15.9)

2012-04-05  Dominique Dumont  <domi.dumont@free.fr> 2.012

    * Application changes:
	* Debian Dep-3 patch parser: quilt formats patch in a very concise
	way.  There's no Index: line and no '====='. OTOH, imported patch
	may contain this lines until the patch is refreshed. This commit
	makes sure that both types of patch are parsed
	correctly.
	* Debian model: changed meta element into my-config. This should
	make clear that this element stores user's config regarding dpkg
	files.
	* Tester: Produced file order is not important. Make sure both
	list are sorted before being compared (Closes Debian #666705)

    * Test changes:
	* multistrap test: ignore load warnings (which pop up in Perl
	smoke tests with perl 5.15.9)

    * Framework changes:
	* Instance: added on_change_cb to take action when something is
	modified in the config tree

2012-03-19  Dominique Dumont  <domi.dumont@free.fr> 2.011

    * Application changes:
      + Debian copyright: added deprecated License-Alias paramater. 
        When set to 'Perl', this parameter is migrated into 
        License: Artistic or GPL-1+
      + Debian DpkgSyntax: better error message. This was really annoying for DEP-3
        patch parser.
      + cme: added forgotten -stack-trace option

    * Tester changes:
      - removed check_* parameter. 
      + Added wr_check parameter
      + added possibility to pass options to grab and fetch with check and wr_check.

2012-03-13  Dominique Dumont  <domi.dumont@free.fr> 2.010

    * Application changes:
      * Debian control:
	* fix warning of section and priority fields
        + added check and fix for libpng and libtiff4 transistions
	* Debian Copyright: added warnings if Files uses either [ ] or |
	(thanks gregoa for the suggestion)
      * cme: check must check all values

    * Framework changes:
      * IdElementReference: use fetch in user mode to get choice list
        (means values in layered mode)
      * Value: fetch with allow_undef mode must behave like user mode,
        not backend mode (fix warp problem in layeredmode)
      * ValueComputer: added usage of compute as an upstream default
        value. Some cleanup was done around that

2012-03-01  Dominique Dumont  <domi.dumont@free.fr> 2.008

    * Application changes:
      * Debian control:
        + comments are now parsed correctly
      * Debian copyright model:
        + added support for deprecated X-Comment. X-Comment fields are converted
          to Comment fields (note that regular comments are forbidden)

    * Framework changes:
      * Requires perl 5.10.1 instead of 5.10.0
      * provide file name and line number in syntax error message

2012-02-26  Dominique Dumont  <domi.dumont@free.fr> 2.007

    * cme: fix 'migrate' command.

2012-02-25  Dominique Dumont  <domi.dumont@free.fr> 2.006

    * Application changes:
      * Debian control model: 
        * bumped default Debian source standards version to 3.9.3
        - no longer try to enforce first lowercase in Synopsis. 
          Too many false positives (fix debian #661184)
        - Removed check for virtual package (source packages are seen as
          virtual packages). Unfortunately, virtual packages are now reported 
          as unknown packages. Suggestions on how to fix this are welcome.
      * Debian copyright model:
        * changed copyright type from line based list to string leaf
    * Framework changes:
      + cme: added forgotten 'migrate' command (i.e. cme migrate stuff)

2012-02-23  Dominique Dumont  <domi.dumont@free.fr> 2.005

    * Application changes:
      * Debian copyright model: updated url for dep-5 format with new 
        Debian approved one. URL is no longer updated silently, user 
        will have to request it with 'cme fix' command

2012-02-09  Dominique Dumont  <domi.dumont@free.fr> 2.004

  * Build.PL runs gen_class_pod.pl which loads Config::Model from lib,
    hence most of the runtime dependencies are now moved in
    configure_requires. This should improve Perl smoke tests.

2012-02-08  Dominique Dumont  <domi.dumont@free.fr> 2.003
   
   * Added configure_requires on File::Slurp (Fix RT#73611)
   * Updated meta-data to point toward github instead of sourceforge

2012-02-08  Dominique Dumont  <domi.dumont@free.fr> 2.002

    Most of the fixes aim to solve issues with Perl smoke tests

    * Application changes:
      * fix bash completion for cme options

    * Framework changes:
      * Added dependency on namespace::clean and Mouse
      * AnyId: remove deprecation warning. check is useful as an alias to check_content
      * Lister: no need to require perl 5.10
      * Tester: don't use next to exit from sub
    
    * Tests: 
      * avoid undef $ENV{HOME} problems on Windows

2012-02-06  Dominique Dumont  <domi.dumont@free.fr> 2.001

    Big change this time, hence the version bump tp 2.001. The main
    change for users is the deprecation of the config-edit program in
    favor of cme. Instead of using options, this cme uses command
    keywords like git, so users will have more possibilities while
    typing less. Internally, some performance improvements were
    implemented. Given the work required, core Config::Model classes
    were converted to Moose.

    In more details:

    * Application changes:
      + New cme program to edit/validate configuration.
      * model Debian::Dpkg: 
        * fixed computed default value for VcsBrowser
        + added rules element for debian/rules file
        * DEP-5 model: updated doc and removed obsolete URL. Thanks to skaet 
	  for raising this point
        * Debian/Dpkg/Control/Binary model:
	  + Added deprecated XC-Package-Type. 
	  + Added migration from XC-Package-Type to Package-Type
    * Framework changes:
      * All:
        + Improved performance by running validation only when data 
	  is modified. (implemented with notify_changes method)
        * breaks memory cycles in backend manager
        * Converted to Moose all classes inheriting Config::Model::AnyThing

2011-12-06  Dominique Dumont  <domi.dumont@free.fr> 1.265

    * Application changes:
        * model Debian::Dpkg: 
          + added Multi-Arch parameter
          * don't fail when debian/copyright is missing or empty

    * Framework changes:
        * Config::Model::Value: layered value is also part of a standard value
        * Config::Model::CheckList: in custom mode, checklist must return the whole
          list when queried by user, not just the changed items. 
          (Fix Config::Model::OpenSsh RT#72916)

2011-11-29  Dominique Dumont  <domi.dumont@free.fr> 1.264

    * Application changes:
        * model Debian::Dpkg:
          - removed another email check (was hiding in a hg branch)

2011-11-29  Dominique Dumont  <domi.dumont@free.fr> 1.263

    * Application changes:
        * model Multistrap:
          * Use convert =>lc on most parameters to match multistrap's behavior
          + added deprecated forceunpack parameter (migrated to unpack). 
          + force sections and key names to be lowercase
          + added components parameter to Multistrap::Section model
        * model Debian::Dpkg:
          - removed email checks
	* bash_completion: use new Lister class to gain a lot of speed

    * Framework changes:
        + Config::Model::HashId: added convert parameter
        * Config::Model::Value: recompute choice before checking 
          if a reference matches available choices.
        + Config::Model::Lister: new bunch of functions to list models
	  and applications. Used only by bash_completion. 
    * Inifile backend changes:
        * delay validation after read because read order depends on the
          INI file and not on the model.
        + added force_lc_(key|name|value) parameter to take care of case 
          insensitive INI files

2011-11-18  Dominique Dumont  <domi.dumont@free.fr> 1.262

    * Config/Model/Tester: avoid test failure by sorting file list 
      before comparing them 

2011-11-17  Dominique Dumont  <domi.dumont@free.fr> 1.261

    * Test changes (Config/Model/Tester):
      * reworked cfg file list check
      * Avoid test conf pollution from one test to the other
      + added possibility to specify arbitrary file name (for multistrap)

    * Application changes:
      + new multistrap model. Supports multistrap's layered configuration
      * lcdproc:
        * lcdconf2model.pl: added better check of info in square brackets
        * lcdproc/LCDd.conf: resync with upstream lcdproc LCDd.conf 

    * Inifile backend changes:
      + added write_boolean_as, split_list_value, section_map and
	join_list_value parameters to cope with special conventions
	regaring INI files
      * No longer write empty list parameter (i.e. just "foo=" lines)
      * ensure that empty sections are not written

    * Framework changes:
      * Config::Model::Value:
	+ added write_as parameter for booleans
        + added clear_preset method
      + C::M::CheckList, C::M::Instance, C::M::Value: added layered value
      + C::M::Value::LayeredInclude: new class to include sub-layer
        of configuration data
      + config-edit: added -config_file option
      + added Test::File::Contents build dependency

2011-10-28  Dominique Dumont  <domi.dumont@free.fr> 1.260

    * Application changes
        * Backend Debian::Dpkg: skip empty lines in patch series files
    * Framework changes:
        + Config::Model::Tester: new class extracted from t/model_tests.t
          to test config files and models. 
        * Config/Model/Loader.pm: Make sure that load("!") goes to root 
          even if load was called from a child node. Fix RT#69480

2011-10-16  Dominique Dumont  <domi.dumont@free.fr> 1.259

    * Application changes
        * model Debian::Dpkg: Bumped compat default value to 8
    * fixed test to work even if lcdproc is not installed

2011-10-14  Dominique Dumont  <domi.dumont@free.fr> 1.258

    * Application changes
        * model Debian::Dpkg::Patch: Synopsis is no longer mandatory. 
          Issue a warning for empty Synopsis and propose a value based 
          on patch name
        + model Debian::Dpkg::Meta: added email element
        + model Debian::Dpkg::Copyright::LicenseSpec: compute license 
          text from Software::License (requires version patched for Debian)
        * Backend::Debian::Dpkg::Copyright: Rewrote parser to classify 
          correctly Files and Licenses paragraph even if extra fields are 
          prepended.
        * model Debian::Dpkg::Control::Source: Vcs-browser must also accep
          https URLs
        * lcdproc:  fixed some specs in square brackets in LCDd.conf template.
          Reworked model generator to better specs in square brackets and
          handle model snippets in curly brackets 

    * Framework changes:
        * ValueComputer: &index and &element can only work with parent 
          or ancestors in tree. Fixed grammar inside of {} statements. 
          It is now able to return '' when no replacement is found
        * Value: fix warn_if warn_unless check in custom mode. Cleaned up 
          mess about mandatory value checks. Custom values are no
          longer checked this way

2011-09-16  Dominique Dumont  <domi.dumont@free.fr> 1.257

    * Framework changes:
        * config-edit: avoid deprecation warning
        * C::M::AnyId: enable automtic fix of duplicated values
        * C::M::Node: Create BackendMgr when read_config or write_config 
          is defined (Fixes Debian FTBS in Config::Model::TkUI See #642157)

    * Application changes
        + models Debian::Dpkg::Control::Binary and Source:
          added duplicates warning in dependencies
        + model Debian::Dpkg::Control::Source:
          compute Vcs-Browser and Vcs-Git default value for pkg-perl team
        * model Debian::Dpkg::Patch: No need for a first capital letter 
          restriction. Look for debian patches in the correct places

2011-09-16  Dominique Dumont  <domi.dumont@free.fr> 1.256

    * Application changes
        * Dpkg control model: warn (and offer to fix) duplicated 
          dependencies
        + Dpkg model: new compat docs and dirs parameters

    * Framework changes:
        * TreeSearcher.pm: properly fix conflict between method name and
          Moose::Util::TypeConstraints

2011-09-15  Dominique Dumont  <domi.dumont@free.fr> 1.255

    * Framework changes:
        * Instance.pm, Node.pm: take into account force_load 
          with delayed loading of config files
        * BackendMgr.pm: New Moose class (renamed from AutoLoader)

2011-09-04  Dominique Dumont  <domi.dumont@free.fr> 1.254

    * fix tests that blow up with Debian build tools

2011-09-02  Dominique Dumont  <domi.dumont@free.fr> 1.253

    * Framework changes:
        * AnyId: reworked warning storage and display
        * Value: check can be called without arg to check current value
        
2011-09-01  Dominique Dumont  <domi.dumont@free.fr> 1.252

    * Framework changes:
        * AutoRead.pm: correctly handle ~ as home dir (thanks fabreg)
        * Backend/ShellVar.pm: do not write global comments if 
          there's no data to write
        * AutoRead.pm: do not leave empty files

2011-08-30  Dominique Dumont  <domi.dumont@free.fr> 1.251

    * Application changes
        * Backend Debian/Dpkg/Copyright.pm:
            Fixed parser to avoid confusing License and License-Alias
        + model Debian/Dpkg/Control/Source.pl:
          warn in case of duplicated dependencies
        * Debian/Dependency.pm: Fixed handling of dependency alternates
        * Backend Debian/Dpkg/Patch.pm: patch write is now working

    * Framework changes:
        * Value.pm: rewrote apply_fix to use check to apply fixes. 
          No longer stores fixes as sub ref.
        * AnyId.pm: rewrote apply_fix to use check to apply fixes. 
          Split check in a global check and dedicated index (check_idx) check
        * AnyId.pm: Added fix_duplicates feature
        * Instance.pm: apply_fixes: now relay the call to hash and lists objects
        * OjTreeScanner.pm: added hooks for node_content hash_element and list_element

2011-07-22  Dominique Dumont  <domi.dumont@free.fr> 1.250

    * Test changes
        * Debian dpkg tests: reworked cache file syntax (text instead of
          Perl). Perl file did change randomly depending on order of
          hash keys. That caused trouble when building Debian packages
          because running tests did change a source file.

    * Application changes
        * Debian Dpkg License model and backend: 
          Reworked Licence models to allow comments and arbitrary parameters
          in stand-alone licences section (Closes Debian #633847)
        * Backend Debian::DpkgSyntax: Better handle newlines

    * Framework changes:
        * lib/Config/Model/Loader.pm: Raise an exception if a hash of
          node gets a load string like hash:foo=bar (this one is
          reserved for hash of leaves)

2011-07-12  Dominique Dumont  <domi.dumont@free.fr> 1.249

    * Framework changes:
        * Config/Model/Value.pm: 
          * apply_fixes applies all available fixes of a 
            value *then* save the value.
          * Emit one warning per problem instead of one 
            warning per problematic values (with embedded newlines)

    * Application changes:
        * Config/Model/Debian/Dependency.pm: reworked to take buildd 
        limitation into account (check if Perl version is available 
        in sid to decide the order of the alternates dependencies)
   
2011-07-05  Dominique Dumont  <domi.dumont@free.fr> 1.248

    * Framework changes:
        * Reworked test framework 
        * New test require new build dependency: File::Copy::Recursive
        * C::M::Value: allow an enum to have an empty ('') value.
        * Yaml backend: Do not try to call load_data when YAML 
          file is almost empty (file present but no data in there)
        * config-edit: force save when command are passed in command
          line arguements

    * Application changes:
        * Debian::Dependency: Do not issue warning when a package 
        is pure virtual (found from local apt cache)
        * Debian::Dpkg::Control backend: read control information 
          according to element order in config class. This avoids 
          problems when Maintainer field is declared after
          the Dependencies

2011-06-27  Dominique Dumont  <domi.dumont@free.fr> 1.247

    * Application changes:
        * examples/lcdproc/LCDd.conf: fix typos
    * Framework changes:
        * lib/Config/Model/Backend/IniFile.pm: Fix failure to load in 
          debug trace: do not call location when $obj is undef

2011-06-17  Dominique Dumont  <domi.dumont@free.fr> 1.246

    * Application changes:
        * LCDd.pl model: re-generated with new C::M::Itself to avoid spurious pod
          formatting. Fix issue with embedded quotes in Hello and GoodBye parameters.

2011-06-17  Dominique Dumont  <domi.dumont@free.fr> 1.245

    * Application changes:
        * models Debian::Dpkg::Copyright::License:
          Allow any license exception keyword (fix Debian bug #627874)
        + New model for lcdproc: 
          The model for lcdproc (LCDd) is generated from the template 
          LCDd.conf file provided by lcdproc project. This model can be 
          generated by running Dist::Zilla (when working from Mercurial) or
          by running Build.PL (when working from Config::Model Perl 
          distribution). 
          Note to packagers: LCDd conf files are 
          (c) 1999-2011 William Ferrell and others, GPL-2. 
          Consequently, all LCDd models files (generated from LCDd.conf) are 
          (c) 1999-2011, D Dumont, William Ferrell and others, GPL-2. 
          
    * Framework changes:
        * lib/Config/Model/Backend/IniFile.pm:
        - Do not write twice leaf comments
        - handle warped_node like nodes
        * lib/Config/Model/Loader.pm:
          Do not remove first and last escaped quotes
        * Build.PL:
            Check (and may be generate) pod doc at build time 
            (on top of release time)
        * lib/Config/Model.pm:
          Fix doc generator to test correctly for time stamp 
          before re-writing docs
        * lib/Config/Model/Backend/IniFile.pm:
          When check is 'no', discard data that belongs to unavailable
          elements

2011-05-16  Dominique Dumont  <ddomi.dumont@free.fr> 1.244

    * Application changes:
        * Fstab model: Prevent wrong value in fs_passno and fs_freq with 
          bound mount point
        * Dpkg: Added doc for control Architecture. Fix pod doc in DpkgSyntax 
          backend
        * Debian/Dpkg/Meta.pl: applied Debian patch fix_perl_group_filter 
          (set group_filter of debian perl team to 'etch' instead of 'lenny')
        
    * Framework changes:
        * config-edit: added -search and -narrow-search options. This options
          enable search in tree element, values and tree documentation. 
        * config-edit: cleaned up option names (always accept '-' in place of '_')
        * Config/Model/AnyThing.pm: fix location string and fix grab function

2011-05-02  Dominique Dumont  <domi.dumont@free.fr> 1.243

    * Application changes:
        * dpkg control: bumped standard version to 3.9.2
        * dpkg: fix spelling . Closes RT# 67783 and 67784. Thanks carnil
        * dpkg control license: tweaked grammar to accept commas in license
          fields. Closes Debian #624305. Thanks Niko Tyni.
        * Dpkg/Control/Source.pl : added XS-Python-Version ans X-Python-Version
          (first steo to solve Debian #624321)
        * Debian Dpkg Meta model: package filter is computed from group-filter
          OR private policy
          
    * Framework changes:
        * reworked warp registration mechanism (Changed inherited WarpedThing into
          delegation to Warper)
        * t/debian*.t: Put back Apt::Pkg test to avoid smoke test failure
        * ValueComputer: Fixed bug to allow temporary variables and $_ in eval'ed 
          formulas

2011-04-07 Dominique Dumont  <domi.dumont@free.fr> 1.242

    * Application changes:
        * dpkg control: added Build-Conflicts field
        * dpkg: Added model for debian/source/options and debian/clean files

    * Framework changes:
       * Value: don't perform value check when fetching standard or default value
       * Backend/Plainfile: now support list element in the form of multi line file.
         Each line of the file is a value of the list.
       * t/fuse_ui.t: skip test if lsmod cannot be used (e.g. Mandriva)
       * t/debian*.t: skip test when /etc/debian_version is not found

2011-04-07 Dominique Dumont  <domi.dumont@free.fr> 1.241
    
    * Framework changes:
       * Build depend on Test::Differences
       * Load and grab: fix to accept '-' in element names 
       * Model.pm: Added value help and summary in generated documentation
       * DumpAsData: skip hash keys containing undef values

2011-04-05 Dominique Dumont  <domi.dumont@free.fr> 1.240
    
    * Framework changes:
        * Most *.pm: replaced 'no Moose' by 'no Any::Moose' 
        
2011-04-05 Dominique Dumont  <domi.dumont@free.fr> 1.238
    
    * Framework changes:
        * Build.PL: removed dead code that cause downstream pacaking problems.
        * Model.pm: fix cosmetic issue with doc generation.
        
2011-04-04 Dominique Dumont  <domi.dumont@free.fr> 1.237
    
    * Framework changes:
        * added MouseX::NativeTraits dependency (fix RT #67196)
        * config-edit: fixed typo (fix RT #66403)
        * Value, Node, AnyId: use dclone to backup constructor parameters
        * Model: Correctly write author and copyright in doc (i.e not as ARRAY0x0...)
        * Yaml backend: fill full_dump option (did not work when set to 0)
    * Application changes:
        * dpkg control dependency: 
            - Dependency filtering mechanism uses source package name to find
              filter value in Meta. This makes more sense than using binary package
              name
              
2011-04-01 Dominique Dumont  <domi.dumont@free.fr> 1.236
    
    * Application changes:
        * dpkg control dependency: 
          - Dependency filtering mechanism now use dpkg meta 
            package_dependency_filter value (i.e. a user parameter).
            Debian_perl package will be filtered on lenny by default
            Filter mechanism can be overriden in a package by package basis
            See Debian::Dpkg::Meta config class for details. 
          - Warn if a package is unknown.
          - Accepts version specified with dpkg variables.
        * dpkg control and copyright: warn if dh-make-perl boilerplate is found
        * dpkg control: added Package-Type parameter (Peter Pentchev)
        * Dpkg meta: new class to enable user to customize dpkg editor. 
          (email-updates and dependency-filter). Content of meta is saved in
          ~/.dpkg-meta.yml
        * Dpkg control: change e-mail address based on content of meta 
          email-updates

    * Framework changes:
        * Value: added replace_follow parameter to specify automatic
          replacement based on a hash somewhere in the configuration
          tree (used by dpkg e-mail update)
        * Extracted initialisation of reader and writer from new() and moved in 
          init() method to avoid deep recursion on startup.
        * Use Any::Moose instead of plain Moose
        * Removed dependency on MooseX::Singleton
        * Model: added author, copyright, license fields. This data is not used by
          Config::Model, but can be used in the user interface or to generate config
          class doc
        * AnyThing: Fix parsing of multi line annotations. Now use Pod::POM 
          to load annocation from Pod document
        * dist.ini: Depends on Pod::POM
        * Model.pm: added generate_doc method
        * config-edit: new -gen-pod option to generate pod document from config class
        * HashId: fix default_with_init to be able to auto-create leaf values 
          specified in the model

2011-03-01 Dominique Dumont  <domi.dumont@free.fr> 1.235
    
    * Application changes:
        * dpkg control source model: Encourage Standard-Version 3.9.1
        * dpkg control dependency: only versions older than old-stable (i.e. 
          not found on madison) will trigger a warning
        * dpkg copyright: Handle license in header (Closes Debian #614776)
        * Dpkg copyright backend: skip empty copyright lines
        
    * Framework changes:
        * WarpedThing: Can warp based on the location in a tree. For instance to make
        an element mandatory in one place and not in another. Used by Debian copyright model
        * Value: mandatory values also require non-empty strings
        * config-edit: Force to load all sub-models (i.e. control, copyright) of
        a top-model (err.. dpkg) when run with option -ui none

2011-02-21 Dominique Dumont  <domi.dumont@free.fr> 1.234
    
    * factor out comment extraction: code that retrieve comments and tie it to 
      actual config data is generic. Now this is handled by 
      C::M::B::Any::associates_comments_with_data
    * factored out comment writing in C::M::B::Any::write_global_comments
      and C::M::B::Any::write_data_and_comments
    * Fix bad handling of leaf type Ini backend (Thanks Krzysztof for the notice)
    

2011-02-11 Dominique Dumont  <domi.dumont@free.fr> 1.233
    
    * Application changes:
        * dpkg control source model: Added DM-Upload-Allowed and all Vcs-* tags defined 
        in Debian reference guide (Thanks Peter Pentchev for the patch)
          (Fix RT 65575)
        
    * Framework changes:
        * Backend Ini file: Fixed comment handling
        * All modules: Improved synopsis. You can now save them in a file and 
          have a working program
        * Remove crappy handling of comments in load_data methods. 
        * DumpAsData: Write annotations as pod in method dump_annotations_as_pod
        * Anything: load_pod_annotation load annotations from a pod document 
        * Instance write back: now correctly call all write_back when several
          nodes in model needs to be called back

2011-01-30 Dominique Dumont  <domi.dumont@free.fr> 1.232

    * Added missing Text::Autoformat dependency

2011-01-30 Dominique Dumont  <domi.dumont@free.fr> 1.231

    * Application changes:
        * Debian::Dependency: reworked to reduce calls to madison. Report available
          versions when unnessary version issue is found.). Source is optional.
        * dpkg control model: added forgotten Enhances and Pre-Depends. Added warnings for
          too long lines in Description (plus fixes based on Text::Autoformat). Added 
          Synopsis element to better tune warnings and fixes
    * Framework changes:
        * FuseUI: Fix undef warning. Ensure that files finish with "\n". 
          Fix bug where value 0 was shown as an empty file.
        * Added PlainFile backend (each config parameter is stored in its own file. useful for
        some dpkg data)

2011-01-21 Dominique Dumont  <domi.dumont@free.fr> 1.230

    * Application changes:
        * Debian::Dependency: don't check debhelper
        * Debian::Copyright: removed license keyword warnings. (fix Debian #610242), lots
          of other bug fixes (including debian bug #609889 #610231)

    * Framework changes:
        * AnyId: added migrate_keys_from to migrate list or hash content 
          during updgrades.
        * ObjTreeScanner: Added node_dispatch_cb parameter to setup callback
          dedicated to specific configuration classes.
        * ValueComputer: added 'undef_is' to allow undef value in formulas. Useful for
          complex migration scenario where migration can come from several alternative parmeters.
        * FuseUI: Fix bug that disabled write in a boolean value
        
2011-01-10 Dominique Dumont  <domi.dumont@free.fr> 1.229

        * config-edit: added -apply-fixes option
        * Value: can specify wider replace instruction by using regexp as
          key of the 'replace' parameter
        * Debian::Dpkg::Copyright: updtead to new CANDIDATE DEP-5
          specification. Copyright files written for older
          specifications are migrated to the new specification. This
          should save a lot of typing from my fellow Debian packagers.
          Feedbacks are welcome.


2011-01-09 Dominique Dumont  <domi.dumont@free.fr> 1.228

        * Specifically require DB_File as this module is not available by default on Ubuntu
        * Skip Debian dependency tests when AptPkg::Config is not available (non Debian systems)

2011-01-07 Dominique Dumont  <domi.dumont@free.fr> 1.227

        * Model.pm: deprecated name_match parameter in accept
          specification. The regexp should now be specified as a
          key of a hash. 
        * Value.pm: warn_if_match and warn_unless_match can speficy instructions to "fix"
          the value.
        * WizardHelper: can be set to stop on items with warnings. Added bail_out method to bail
          out cleanly from wizard helper.
        * model Debian::Dpkg::Control::Binary: Depends element specifies 
          Perl cargo class Config::Model::Debian::Dependency (see below)
        * Likewise for Debian::Dpkg::Control::Source Build-Depends*
        * Debian::Dependency: new class derived from Value to provide checks specific
          to Debian dependencies (syntax, whether a "(>= vers)" is necessary or not, ... )
        * New dependency: LWP::Simple


2010-12-08 Dominique Dumont  <domi.dumont@free.fr> 1.226

        * config-edit: mount fuse file system in the background. (like sshfs)
        * FuseUI: Improved doc
        * C::M::Backend::Fstab: improved doc

2010-12-06 Dominique Dumont  <domi.dumont@free.fr> 1.225

        * Build.PL: build depends on Test::Command 0.08 to avoid smoke test problems

2010-12-06 Dominique Dumont  <domi.dumont@free.fr> 1.224

        * Node AnyId Value: get() now accepts check parameter, autoadd parameter 
        * Node AnyId: added children method
        * Added Fuse interface: configuration tree is mapped to a virtual directory. 
          Use config-edit -ui fuse -fuse_dir some/where to use. 
          Stop with 'fusermount -u some/where'
        * Recommends Fuse (to be able to use fuse user interface)
        
2010-11-28 Dominique Dumont  <domi.dumont@free.fr> 1.223

        * Debian/Dpkg/Copyright: removed restrictions on copyright format
        * dist.ini: added build dependency on Probe::Perl (to run tests that invoke config-edit)
        * Model.pm: can now load model snippet from Foo.d directory. I.e. *.pl files found in Foo.d 
          are used to augment Foo model. This will be useful to agregate models coming from several
          teams. For instance any team can extends the Fstab model provided in this distribution.

2010-11-22 Dominique Dumont  <domi.dumont@free.fr> 1.222

        * bash-completion: fixed missing application option
        * Fstab model: specify '/etc' dir inst

2010-11-21 Dominique Dumont  <domi.dumont@free.fr> 1.221

        * Annotation: can now save annotation for node and list objects
        * Added new Fstab model and backend. Supports ext2 to ext4 and
        other file systems.  Please contact the author if options are
        missing.
        * Fix pod spelling errors (RT #62947). Thanks to carnil for the
        report and patches.
        * added config-edit test (build requires Test::Command)
        * config-edit: added -application option, added -list
          model|applications option
        * Model.pm: updated doc
        * bash_completion.config-edit: is now *not* executable

2010-11-10 Dominique Dumont  <domi.dumont@free.fr> 1.220

        * Fix Build.PL to install files found in lib/Config/Model/*.d
        * Added Cookbook::CreateModelFromDoc from SF wiki

2010-11-09 Dominique Dumont  <domi.dumont@free.fr> 1.219

        * config-edit: fixed syntax error
        * replaced command lines generated from template by bash-autocompletion.
        * Removed dependency on Text::Template
        * Added Config::Model::Manual::ModelCreationIntroduction doc from SF wiki

2010-11-05 Dominique Dumont  <domi.dumont@free.fr> 1.218

        * Moved doc from README into model.pm
        * Copyright: added deprecated parameters (Upstream-Name
          Upstream-Maintainer Upstream-Source). Added migrate_from
          instruction to migrate user data from old parameters to new
          parameters.
        * Copyright: Removed fuzziness around trailing '+' in licence names
        * AnyThing.pm: grab() : accept '+' without surrounding quotes in argument
        * WarpedNode: delegates copy_from and dump_tree to Node (fixes hash 
          copy with warped nodes)
        * config-edit: added -open_item option
        * Build.PL: configure_depends on Text::Template to avoid CPANPLUS 
          installation failure

2010-10-26 Dominique Dumont  <domi.dumont@free.fr> 1.217

        * Fix issue where value reference did not follow refered
          to parameters after creation.
        * Fstab example: split the model for the Debian mini-debconf
        workshop

2010-10-26 Dominique Dumont  <domi.dumont@free.fr> 1.216

        * Control.pl: fixed control fields order to be less confusing (thanks to ansgar
          for the advice)
        * Backend IniFile: Bug fix to write top level parameters before the first INI class
        * Node.pm: Bug fix when calling fetch_element with accepted parameters
        * Model.pm: updated doc to point to overview and introduction on SourceForge wiki
        * example/fstab/Fstab.pl: Fix model so it can be loaded by config-model-edit

2010-10-19 Dominique Dumont  <domi.dumont@free.fr> 1.215

        * Instance.pm and Loader.pm: added some stub to preserve backwards compatibility 

2010-10-19 Dominique Dumont  <domi.dumont@free.fr> 1.213

        * AutoRead.pm: do not clobber configuration file when trying to write erroneous data
        * Value.pm: fix value check based on Parse::RecDescent
        * Dpkg::Copyright: fix bugs masked by above problem
        * Dpkg::Copyright: Fix read/write issues with License that can be stored either 
          in Files section or their own sections

2010-10-15 Dominique Dumont  <domi.dumont@free.fr> 1.212

        * Value and AnyId: store wrong values when store check is disabled 
        (i.e. config-edit is run with -force option).
        * Debian::Dpkg::Copyright: cosmetic improvements on written file
        * Instance.pm: Removed all overengineered push_no_value_check, pop_no_value_check. 
        This stuff had too many drawbacks of global variables. An optional check parameter 
        was added to a lot of calls on Config::Model. The API was also sanitized with some 
        positional parameters replaced by named parameters. Most of these changes should 
        be internal. The main impact is that read/write backends must now explicitely
        pass this check parameter lest the force_load will not work.
        * ValueComputer: Remove req on Parse::RecDescent version. (Debian bug #597794)
        * Value.pm: added silent parameter to fetch method to avoid displaying warnings on STDOUT
        * Enable read and write of utf8 characters

2010-10-01 Dominique Dumont  <domi.dumont@free.fr> 1.211
        * Value.pm: added warn_if_match and warn_unless_match parameters.
        Value will issue a warning if the stored value match (or does not) 
        match a Perl regular expression specified in the model.
        * AnyId.pm: Likewise, added warn_if_key_match and 
        warn_unless_key_match. 
        * Value.pm: added warn parameter. Unconditionaly issue a warning with
        a string specified in the model. Mostly usefull for deprecated or accept'ed 
        parameters
        * Loader.pm: load string can now undef a leaf with '~' action. 
        E.g load("foo~") will set foo parameter to undef.
        * Copyright model: warn if unknown license is used.

2010-09-30 Dominique Dumont  <domi.dumont@free.fr> 1.210
        * renamed config-edit-dep5 in config-edit-dpkg-copyright
        * renamed Debian::Dep5 model to Debian::Dpkg::Copyright
        * renamed Config::Model::Backend::Debian::Dep5 backend to 
          Config::Model::Backend::Debian::Dpkg::Copyright
        * Factored out code to read/write control files in 
          Config::Model::Backend::Debian::DpkgSyntax
        * Created model and backend for Debian control files
        * added config-edit-dpkg-control command line

2010-09-20 Dominique Dumont  <domi.dumont@free.fr> 1.209
        * Fixed Debian::Dep5 parser: fixed read issue and added write
        capability

2010-09-16 Dominique Dumont  <domi.dumont@free.fr> 1.208
        * Fixed missing dependencies in Build.PL (Building from hg
        requires Dist::Zilla and Dist-Zilla-Plugins-CJM >= 3.01)

2010-09-14 Dominique Dumont  <domi.dumont@free.fr> 1.207
        * Added Debian's Dep-5 model (with config-edit-dep5 CLI)
        * Value.pm: Added validation of value based on a Parse::RecDescent
        grammar
        * AnyId.pm: Authorized keys can also be based of a
        Parse::RecDescent grammar
        * Node.pm (find_element): returns the element name (if known). Can
        also find the element in a case insensitive manner

2010-07-23  Dominique Dumont  <domi.dumont@free.fr> 1.206

        First version to feature code written during Google Summer of Code 2010.
        For this GSoC, Krzysztof Tyszecki has provided:
        * a new backend for INI file that can:
            * read and write comments to and from annotations. This way
              users comments are preserved
            * read and write parameters that are repeated in the INI file. This
              repeated parameters will be loaded in list elements
        * the capacity to load annotation from perl data structure
        * a new model feature to accept unknown element. This will enable
        loading and writing configuration files even if parameters are
        unknown. This feature is required to create models targeted for
        configuration upgrades: only upgrade and migration specifications
        need to be specified in a model. Parameters that don't change from
        one version to another need not to be specified in the model.

        Other changes:
        * lib/Config/Model/Loader.pm (_walk_node): bug fix to load node
        element annotation
        * lib/Config/Model/Dumper.pm (): bug fix to dump hash and list
        element annotations
        * Fixed Fstab example

2010-06-04  Dominique Dumont  <domi.dumont@free.fr> 1.205

        * t/node.t: patch by Niko Tyni to avoid Carp::Heavy failure. Fix
        Debian FTBS bug #582915 and countless CPAN smoke tests failures

2010-06-03  Dominique Dumont  <domi.dumont@free.fr> v1.204

        * MANIFEST.SKIP: Prompt re-release because 1.203 tarball contains
        debian packages used for tests (oops)

2010-06-03  Dominique Dumont  <domi.dumont@free.fr> v1.203

        * lib/Config/Model/Loader.pm (_load_hash): Bug fix: can load
        annotation tied to hash values (node or leaf).

2010-04-22  Dominique Dumont  <domi.dumont@free.fr> v1.202

        SUMMARY:

        * New core feature: user can store annotation (e.g. structured
        comments) with each configuration object of the configuration
        tree, be it node, leaf, hash or list. Read backend can parse
        confguration file comments and store them in annotations.

        For instance ShellVar read backend will parse comments and store
        them in the configuration tree. ShellVar write backend will put
        them back in the configuration file.

        * PopCon editor preserve comments in configuration file.

        * Code: Uses Moose for C::M::Annotation and C::M::Backend::Any. Moose
        looks good. I may use Moose for all other Config::Model classes later.

2010-04-22  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/Backend/ShellVar.pm (read): Tries its best to
        read user comments and store them in annotations.
        (write): Write annotation as comments. Write model documentation
        as comments starting with '##'

2010-04-19  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/AnyThing.pm (grab_annotation): new method

2010-04-15  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/Loader.pm (load): Can load string with annotations

        * lib/Config/Model/Dumper.pm (dump_tree): Dumps annotations in
        data string

2010-04-07  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/AnyThing.pm (annotation): new accessor method
        for annotations.

        * lib/Config/Model/Annotation.pm : New file to load and save
        configuration annotations (just like comments with a structure)

        * Build.PL: added dependency on Moose

2010-04-01  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/models/PopCon.pl: Fixed PopCon config
        directory. Cosmetic improvements for descriptions.

2010-03-29  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/*.pm: Put back VERSION number and bumped them
        all to 1.201 to make CPAN indexer happy

2010-03-28  Dominique Dumont  <domi.dumont@free.fr> 1.001

        * Build.PL (process_tmpl_files): Build depends on
        Text::Template. Generates config-edit-popcon

        * config-edit.tmpl: New file to create dedicated config-edit-foo
        commands

        * lib/Config/Model.pm: Version bumped to 1.001

2010-03-26  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/Backend/ShellVar.pm : New backend to read and
        write configuration files used by shells (sourced by scripts)

2010-03-22  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/WizardHelper.pm (node_content_cb): no longer
        forget to scan element that are warped in while scanning the node.

        * lib/Config/Model/Node.pm (previous_element): new method to
        iterate through availalble node elements

2010-03-17  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/Value.pm (setup_match_regexp): added new
        'match' parameter to validate a value against a Perl regular
        expression.

2010-03-16  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/Node.pm (load_data): can load data in hidden
        element when store check is ignored.

2010-03-11  Dominique Dumont  <dominique.dumont@hp.com> v0.644

        * lib/Config/Model/Loader.pm (load): Load string now support:
        - '.=' operator to append to config values.
        - '=~' to loop configurations instruction over list or hash elements

2010-03-01  Dominique Dumont  <dominique.dumont@hp.com>

        * all: Applied spelling corrections done by Debian Perl
        team (thanks gregoa)

2010-02-23  Dominique Dumont  <dominique.dumont@hp.com>  v0.643

        * lib/Config/Model/DumpAsData.pm (dump_as_data): Can dump ordered
        hash in hash ref with __order key to specify order of hash
        elements

        * lib/Config/Model/HashId.pm (load_data): Accept hash ref with
        __order to load ordered data

2010-02-17  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/AnyId.pm: For better clarity, Hash and List
        parameter max and min are changed to max_index and
        min_index. Backward compatibility is kept, but warning will be
        displayed on the terminal when the old parameters are used.

        * lib/Config/Model/Backend/Yaml.pm: New backend to read and write
        YAML configuration files.

2010-02-05  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/CheckList.pm (set): buf fix: split input value
        to get the list of checked items.
        Migrated to Log4perl

2010-02-03  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/CheckList.pm: Fixed default and upstream
        default handling

2010-01-21  Dominique Dumont  <dominique.dumont@hp.com> v0.642

        * lib/Config/Model/WarpedNode.pm: added get_help to methods
        forwarded to Node object to avoid breaking the graphical model
        editor

2010-01-19  Dominique Dumont  <dominique.dumont@hp.com> v0.641

        * lib/Config/Model/Node.pm: Ported to Log4Perl (Tree::Node class)

        * lib/Config/Model/AutoRead.pm: Doc updates on plugin mechanism
        for read/write classes

        * lib/Config/Model/Value.pm: model example updates

        * lib/Config/Model/Dumper.pm (dump_tree): Correctly quote values
        in list elements

2009-12-01  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/HashId.pm: Ported to
        Log4Perl (Tree::Element::Hash class)

2009-09-25  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/Instance.pm (write_back): Croak if no
        write_back callbacks were registered

2009-09-09  Dominique Dumont  <dominique.dumont@hp.com> v0.640

        * lib/Config/Model/WizardHelper.pm (new): Correctly scan list
        element.

2009-07-30  Dominique Dumont  <dominique.dumont@hp.com> v0.639

        * lib/Config/Model/WizardHelper.pm (leaf_element_cb): bug fix:
        scan correctly leaf elements of a hash.
        * lib/Config/Model/WizardHelper.pm: use Log4perl

2009-07-27  Dominique Dumont  <dominique.dumont@hp.com>

        * config-edit: Tk cosmetic improvement. Thanks to Jerome Quelin
        for the suggestion

        * lib/Config/Model/WarpedThing.pm (_do_warp): Use
        Log4Perl. Improved error message

        * lib/Config/Model/Searcher.pm (): replace prints with
        Log4perl. Fixed data structure bug

2009-06-29  Dominique Dumont  <dominique.dumont@hp.com> v0.638

        * lib/Config/Model/WarpedNode.pm (is_auto_write_for_type): Added
        new method that need to be forwarded to Node to avoid write
        cds_file bug.

2009-06-23  Dominique Dumont  <dominique.dumont@hp.com>  v0.637

        * lib/Config/Model/Value.pm: As suggested by Jonas Smedegaard,
        replaced 'built_in' parameter with 'upstream_default'. This change
        will trigger warnings but no errors with existing model. To get
        rid of the warnings, the easiest solution is to update the model
        by running "config-model-edit -model Foo -save" (config-model-edit
        is provided by Config::Model::Itself)

        * lib/Config/Model/CheckList.pm: replaced 'built_in_list'
        parameter with 'upstream_default_list'. This change may also
        trigger warnings. These warnings will also be fixed by running the
        config-model-edit command described above.

        * lib/Config/Model/Value.pm: use Log::Log4perl with categories
        Tree::Element::Value and Tree::Element::Warper

2009-05-30  Dominique Dumont  <dominique.dumont@hp.com> v0.636

        * lib/Config/Model/AutoRead.pm: Added skip_open to avoid opening
        config target file when the open must be done by the
        backend (e.g. for Augeas backend)

        * lib/Config/Model.pm (instance): name parameter is no longer
        mandatory. Uses 'default' as default instance name.

2009-05-13  Dominique Dumont  <dominique.dumont@hp.com> 

        * lib/Config/Model/AutoRead.pm: When calling backend, 'file'
        parameter contains configuration file name without path and
        'file_path' parameter contains complete path and file name

2009-04-17  Dominique Dumont  <dominique.dumont@hp.com> v0.635

        * config-edit: added -dumptype option. -dump can now be used to
        specify a file name

        * lib/Config/Model/Instance.pm (new): Added skip_read parameter

        * lib/Config/Model/Node.pm (new): Added skip_read parameter

2009-04-15  Dominique Dumont  <dominique.dumont@hp.com>

        * config-edit: Fix broken Log4Perl default config. Added -load option

2009-04-11  Dominique Dumont  <domi.dumont@free.fr>

        * lib/Config/Model/AutoRead.pm (): Reworked doc. Aligned read and
        write specs (now have same parameters). Read and write callback
        are passed an opened file handle if possible. Now use Log::Log4perl.

2009-04-02  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model.pm (include_one_class): Can no longer clobber
        element with 'include' class feature.

2009-03-30  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model.pm (check_class_parameters): Accept summary
        parameter. Summary is optional and will be used either to generate
        user interface or may be used to provide comments in saved
        configuration files.

        * lib/Config/Model/Node.pm (get_help): added options to get either
        summary or description of an element

2009-03-29  Dominique Dumont  <dominique.dumont@hp.com> 

        * config-edit: added -dump and -load options
        
2009-02-24  Dominique Dumont  <dominique.dumont@hp.com> v0.634

        * config-edit: removed kludgy read_root_dir and write_root_dir
        options. For test, only one root_dir can be specified (like Augeas)

        * lib/Config/Model/ListId.pm: auto_create parameter is replaced by
        auto_create_ids (still trap wrong parameter to avoid memory
        problems)
 
        * lib/Config/Model/HashId.pm: auto_create parameter is replaced by
        auto_create_keys

2009-02-19  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/ListId.pm (auto_create_elements): Trap wrong
        auto_create argument (avoid massive memory consumption)

2008-12-23  Dominique Dumont  <dominique.dumont@hp.com> v0.633

        * lib/Config/Model/AutoRead.pm : Added -allow_empty parameter so
        starting a configuration from scratch can be allowed by
        configuration model designer. No longer die if 'augeas'
        backend (or any other optional backend) is not found. Just emit a
        warning.

2008-12-16  Dominique Dumont  <dominique.dumont@hp.com> v0.632

        * config-edit: added -backend parameter so (advanced) user can
        specify which read/write backend to use. The actual backed to use
        depends on the model loaded with -model option

2008-11-16  Domi  <domi@bilbo.maison>

        * lib/Config/Model/Instance.pm (write_back): Added backend
        parameter to specify which backend to use to write. By default,
        all backend are tried until one succeeds. This parameter can also
        be specified when calling the constructor

2008-11-10  Dominique Dumont  <dominique.dumont@hp.com> v0.631

        * lib/Config/Model/Value.pm (_pre_fetch): removed dependency on Error

        * lib/Config/Model/WizardHelper.pm : removed dependency on Error

        * lib/Config/Model/AutoRead.pm (auto_write_init): Move Augeas
        read/write feature out of Config::Model. This feature is now
        available in an additional class: Config::Model::Backend::Augeas.
        This class is distributed in its own Perl distribution.

2008-10-29  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/Dumper.pm (dump_tree): No longer dump list
        elements that contain only undef values. No longer dump node that
        do not contain data.

2008-10-21  Dominique Dumont  <dominique.dumont@hp.com> v0.630

        * t/augeas_backend.t: Skip sshd_config tests if Augeas library <= 0.3.1

2008-10-13  Dominique Dumont  <dominique.dumont@hp.com> v0.629

        * lib/Config/Model/CheckList.pm (set_properties): Added ordered
        parameter to checklist. Ordered checklist feature is required by
        Ssh model for Ciphers list (see Config::Model::OpenSsh).

2008-10-01  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/AnyId.pm (get_cargo_info): New method

2008-09-29  Dominique Dumont  <dominique.dumont@hp.com> v0.628

        * lib/Config/Model.pm: Allow include of read or write config
        parameters (required by Xorg model)

2008-09-23  Dominique Dumont  <dominique.dumont@hp.com> v0.627

        * ChangeLog: I plainly forgot to update this file for v0.626. This
        is fixed now.
        
2008-09-22  Dominique Dumont  <dominique.dumont@hp.com> v0.626

        * lib/Config/Model/AutoRead.pm (read_augeas): Lot of bug fix to
        read and write through Augeas. Now, lens containing 'seq' lenses
        must be explicitely declared.

2008-07-31  Dominique Dumont  <dominique.dumont@hp.com>

        * lib/Config/Model/Value.pm (migrate_value): No longer fails when
        a migrated value is also a mandatory value.

        * lib/Config/Model.pm (create_config_class): No longer creates
        empty include in model when skip_include is true (breaks
        Config::Itself tests)

2008-07-30  Dominique Dumont  <dominique.dumont@hp.com> v0.625

        * lib/Config/Model/ListId.pm (swap): Swapped or moved values in a
        list no longer provides wrong location in config
        tree. (index_value were not updated in objects contained in List
        after a swap or a move)

2008-07-24  Dominique Dumont   v0.624

        * lib/Config/Model/Value.pm and others: Modified to allow smooth
        configuration data upgrades without requiring user input (if used
        by packaging, this should really help in avoiding rpmsave or
        dpkg-old files) (See migrate_from parameter)

        * lib/Config/Model/ValueComputer.pm: added 'use_eval' parameter to
        allow more complex computation like regexp in string or uniline
        values
  
2008-07-18  Dominique Dumont

        * lib/Config/Model/AutoRead.pm: Major changes to interface
        Config::Model with Augeas (http://augeas.net). Changes are
        compatible but new warnings are issued:
        - 'syntax' is replaced by 'backend' to indicate that permanent
          storage of configuration data is more than a matter of writing 
          a configuration file.
        - introduced 'config_dir' and 'root' paramater so a backend can 
          specify a configuration dir (e.g. /etc/foo) and a pseudo-root 
          to perform tests (so the config file can land in my_root/etc/foo).

        * lib/Config/Model/Dumper.pm (new): skip_auto_write now take a
        storage backend name as a parameter instead of a boolean (See
        AutoRead for explanations about backends)

        * lib/Config/Model/Node.pm (set): New method to emulate (part of)
        augeas API
        (get): New method to emulate (part of) augeas API

        * lib/Config/Model/Loader.pm (): Added load command '~' which was
        forgotten. This command can delete hash or list
        item. I.e. load("foo~") will delete element 'a' for hash 'foo'
        (_load_list): command '=' now clear all values before storing the
        set of values in the list.

        * lib/Config/Model/AnyId.pm (clear_values): New method to clear
        values without destroying underlying objects.
        (set): New method to emulate (part of) augeas API
        (get): New method to emulate (part of) augeas API

2008-06-20  Dominique Dumont 

        * lib/Config/Model/AutoRead.pm: Changed 'syntax' paramter to
        'backend' as configuration data may be stored to files or through
        dedicated libraries like Augeas, gconf ... Backend now can be
        cds_file, perl_file, ini_file and custom

2008-05-19  Dominique Dumont v0.623

        * Build.PL: Moved from Makefile.PL to Build.PL

2008-05-18  Dominique Dumont 

        * lib/Config/Model/CheckList.pm: added support for built_in
        default list

2008-05-17  Dominique Dumont 

        * lib/Config/Model/SimpleUI.pm: Some cleanup. Added possibility to
        add and element name to 'll' command

2008-05-15  Dominique Dumont 

        * config-edit: added "dev" and "experience" options. With "dev"
        option, config-edit will add "lib" to @INC and look for models in
        "lib"

2008-05-14  Dominique Dumont 

        * lib/Config/Model/Node.pm (fetch_element): Bails out if element
        is hidden (this feature was forgotten)

2008-05-09  Dominique Dumont 

        * lib/Config/Model/Value.pm (submit_to_compute): Fix bug where a
        compute variable in the form 'foo' => '- - &element' did not work
        (new): allow_compute_override is deprecated in favor of
        allow_override within the compute parameter (backward compatible
        change)

2008-05-07  Dominique Dumont 

        * lib/Config/Model/AnyThing.pm (dump_as_data): dump_as_data can
        now be called on all configuration elements. (before, it could
        only be called on nodes)

2008-05-02  Domi  <domi@bilbo.maison>

        * lib/Config/Model/AutoRead.pm: Changed the way to specify auto
        read and write for better clarity. Now they must be specified with
           read_config => [ { syntax => 'ini'},
                            { syntax => 'custom', 
                              class => 'Mine',
                              function=>'my_read'
                            }
                          ]
        instead of 
           read_config => [ 'ini', { class => 'Mine',function=>'my_read'}]
        likewise for write_config

2008-05-01  Domi  <domi@bilbo.maison>

        * lib/Config/Model.pm: Changed 'permission' to 'experience' and
        'intermediate' to 'beginner' for better clarify. Changes are
        backward compatible.

2008-04-29  Dominique Dumont 

        * lib/Config/Model/HashId.pm (move): New method to take into
        account move within ordered hash

        * lib/Config/Model/WarpedThing.pm (compute_bool): warp rule no
        longer fail with eval $foo == 1 when $foo is undef

2008-04-18  Dominique Dumont v0.622

        * Value.pm (fetch): added 'allow_undef' mode to allow reading
        undefined mandatory value (fix morphing warped node containing
        undefined mandatory values)

        * Node.pm (copy_from): No longer die when copying undefined
        mandatory value.

2008-04-16  Dominique Dumont 

        * AutoRead.pm (get_cfg_file_name): Do not use ':' in file
        names. This breaks windows. Now use sub-directories

2008-04-15  Dominique Dumont 

        * Dumper.pm (dump_tree): skip undefined values in list element

        * DumpAsData.pm (dump_as_data): idem

2008-04-14  Dominique Dumont 

        * Model.pm (list_class_element): New method to help debugging of
        configuration models

2008-04-13  Dominique Dumont 

        * Model.pm (include_class): allow multiple includes

2008-04-11  Dominique Dumont 

        * AnyId.pm: Changed the way the cargo parameter are specified. Now
        the cargo parameter holds all the information related to the
        payload of the hash or list. Instead of having :
        cargo_type => ... , cargo_args => {}, config_class_name => ...
        you now have:
        cargo => { type => ..., config_class_name => ..., <other_parm> => ... }
        Model.pm provides a translation from the old way to the new way so
        this change is (95%) backward compatible.
        
2008-04-08  Dominique Dumont 

        * CheckList.pm (set): Fix bug that prevented to use level or
        permission or status parameter with check_list elements

2008-04-05  Domi  <domi@bilbo.maison>

        * Value.pm (pre_store): Fix bug that prevented to load models with
        errors even in tolerant mode.

2008-04-03  Dominique Dumont  0.621

        * Dumper.pm (dump_tree): Added auto_vivify parameter

        * DumpAsData.pm (dump_as_data): By default, now provide full
        dump (with default values). Added auto_vivify parameter

        * Value.pm (fetch): Check for mandatory values even if fetching
        only custom values

2008-04-02  Dominique Dumont  

        * Value.pm (): Cannot warp value_type anymore (this feature was
        hard to use and encouraged too complex model).

2008-03-28  Dominique Dumont  

        * HashId.pm (swap): Fix swap problem which led to duplicated keys
        in ordered hash
        (move_after): New method

2008-03-22  Domi  <domi@bilbo.maison> 

        * ListId.pm (swap): new method
        (remove): New method, equivalent to splice (@list,$idx,1)

2008-03-20  Dominique Dumont  v0.6201

        * Makefile.PL: Removed dependency on Term::ReadLine::Gnu. This module
        is just suggested (as well as Term::ReadLine::Perl)

2008-03-18  Dominique Dumont  v0.620

        * TermUI.pm: Fixed to work with Term::ReadLine::Gnu or
        Term::ReadLine::Perl. Can also work in degraded mode without these
        2 modules. 
        The command handling part was moved to SimpleUI.pm

        * config-edit: added Simple UI mode so config-edit can be used
        with stdin and stdout

2008-02-29  Dominique Dumont  v0.619

        * Value.pm: removed kludgy enum_integer value type 

2008-02-27  Dominique Dumont  

        * Instance.pm (write_back): can override directory where config
        data is written back (necessary for GUI menu like "save in dir
        ...")

2008-02-26  Dominique Dumont  

        * Node.pm (get_help): do not mangle description text (don't remove
        spurious \s and \n. Leave that to user)

2008-02-12  Dominique Dumont  v0.618

        * AnyThing.pm (composite_name): new method to return a name
        like element:index or element.

2008-02-08  Dominique Dumont  

        * CheckList.pm (): added refer_to and computed_refer_to accessors 

2008-01-28  Dominique Dumont v0.617

        * config-edit: added possibility to load Tk GUI (still under
        development)

        * Exception.pm (): Fixed misleading error message for
        UnavailableElement exception

2008-01-25  Dominique Dumont  

        * Value.pm (): added "replace" parameter for enum Value. This
        enables to specify a substitution when storing value.

2008-01-23  Dominique Dumont  

        * WarpedNode.pm (check): no longer die when trying to retrieve
        warped out node, just return undef. This is necessary to be able
        to load configuration files with important error (e.g. a xorg.conf
        file with a wrong device driver: all driver option are no longer
        valid.)

        * Value.pm (check): Added doc for check.  

        * ObjTreeScanner.pm (permission): new method to get or set the
        permission of the scanner (after creation).

2007-12-04  Dominique Dumont  v0.616

        * AutoRead.pm (read_ini): added capability to read configuration
        data from ini file (See Config::Tiny)
        (write_ini): can use ini files to store configuration data
        (read_perl): added capability to read configuration data from a
        perl data structure (see Config::Model::DumpAsData) from a .pl
        (write_perl): can use perl file to store configuration data (.pl
        file)
        (auto_read_init): configuration model can specify cds (dump string
        see Config::Model::Dumper), perl or ini with 'read_config' and
        'write_config' parameter.

2007-11-15  Dominique Dumont  v0.615

        * config-edit: added '-force-load' option to load erroneous
        configuration data. bad data is discarded.

        * Value.pm : handle 'preset' mode to store values
        (fetch):accept mode parameter ( [ custom | preset |
        standard | default | non_built_in ] )

        * Loader.pm (_load_list): When loading list, empty value are
        considered as undef values. I.e 'list_a=a,,"",d' will
        load ('a',undef,'','d') to lista element

        * Instance.pm (new): added 'force_load' parameter to load
        erronueus configuration data. In this case, wrong data will be
        discarded.
        (preset_start): new. Use this method, then load configuration data
        that will be used as "preset data". You can use this feature to
        load data discovered by an automatic mechanism, like hardware
        scan.
        (preset_stop): new. Stop preset mode. Then all data entered will
        be considered as 'custom' data. These custom data can be compared
        to 'default' or 'preset' data for audit purpose
        (preset): new. Query if the instance is in 'preset' mode.

        * Dumper.pm (dump_tree): changed 'full_dump' parameter (0|1) to 
        'mode' (full | preset)
        (dump_tree): if a list contain undef values, they are dumped as
        a_list=a,b,,d. Empty values are dumped as a_list=a,b,"",d

        * CheckList.pm (store): work in preset mode
        (set_checked_list_as_hash): accept a mode parameter ([ custom |
        preset | standard | default ]) to be able to audit config data
        (fetch): idem

2007-10-19  Dominique Dumont v0.614

        * Value.pm: added 'uniline' value type for string with no embedded
        newline. (no "\n")

2007-10-11  Dominique Dumont

        * Model.pm (translate_id_names): new method to translate AnyId
        parameter changes

        * AnyId.pm: Changed some parameters: follow -> follow_keys,
        allow -> allow_keys, allow_from -> allow_keys_from

2007-10-09  Dominique Dumont

        * Model.pm (translate_id_default_info): provides backward
        compatibility for AnyId parameter changes.

        * AnyId.pm: default parameter is replaced by 'default_keys' and
        'default_with_init'.

2007-09-25  Dominique Dumont  v0.613

        * IdElementReference.pm: Changes the API of IdElementReference so
        that API is more explicit (Like the API change for
        ValueComputer). This change is backward compatible (model
        translation)

2007-09-20  Dominique Dumont  

        * ValueComputer.pm: Now compute paramater must use explicit
        parameters for compute formula, variables and replace.  Backward
        compatibility is kept by translating old compute declaration in
        Model.pm
        
2007-09-17  Dominique Dumont  

        * Model.pm (include_class): permission, level and description
        parameters can also be declared within the element declaration.
        (i.e. at the same level than 'type' )
        
        * IdElementReference.pm (): A reference to a list will now take
        into account the values of the list instead of the indexes of the
        list. This makes more sense...

        * CheckList.pm: Change the name of 'default' parameter to
         'default_list' ('default' is still accepted but is deprecated)

2007-09-06  Dominique Dumont  

        * WarpedNode.pm: improved synopsis in doc
        (load_data): new method (forgotten in 0.612)

        * Model.pm: -doc: added synopsis
        - inherit is deprecated in favor of include 
        - inherit_after is deprecated in favor of include_after
        - Raise an exception if an element is declared twice in a
          model (even through include mechanism: overriding an
          included element leads to confusion)

2007-07-26  Dominique Dumont  v0.612

        * HashId.pm : can preserve hash key order (when created with
        ordered => 1). New method to manipulate hash key order are swap,
        move_up, move_down.

        * Exception.pm :new error class  Config::Model::Exception::LoadData

        * AnyThing.pm (grab): added 'grab_non_available' parameter.

        * AnyId.pm: added "ordered" parameter to create ordered hash
        elements. I.e. hashes where the order of the keys is kept (like
        Tie::IxHash)

2007-07-18  Dominique Dumont  

        * Value.pm (load_data): new method

        * Node.pm (load_data): new method
        (dump_as_data): new method 

        * Model.pm (inherit_class): added inherit_after parameter. In a
        model, the order of the elements is important. This parameter
        enable a model to inherit elements from another class and to place
        them in a specific place among the original elements.
        (load): returns the names of the class loaded by this method.

        * ListId.pm (load_data): new method

        * HashId.pm (load_data): new method

        * CheckList.pm (load_data): new method

2007-07-03  Dominique Dumont  v0.611

        * WarpedThing.pm: Modified the way to specify complex warped
        rules. The former way based on list of lists was confusing. Now
        you can specify boolean expressions to find the warp rule to apply.
        
        * Model.pm: Simplified config class inheritance mechanism: inherit
        all or nothing. Added translation of legacy warp parameter (based
        on list of lists) to new warp parameters (based on boolean
        expressions). So the change done in WarpedThing is backward
        compatible.
        
2007-06-06  Dominique Dumont v0.610

        * Model.pm (inherit_class): Fix configuration class inheritance
        mechanism

2007-06-04  Dominique Dumont  

        * Value.pm: can also warp help for enum value

2007-05-09  Dominique Dumont   v0.609

        * config-edit: renamed from config-model

2007-05-07  Dominique Dumont  

        * examples/fstab/fstab_test.pl (produce_fstab): added curses
        interface example (need to install Config::Model::CursesUI to
        work)

2007-05-04  Dominique Dumont  

        * config-model: added possibility to use the curses interface
        provided by Config::Model::CursesUI (if this one is installed)

        * ValueComputer.pm: Modified so compute may return an undef value
        if one of the variable (extracted from the configuration data) of
        the formula is undefined. In other word, propagate undef instead
        of croaking.

        * Searcher.pm: Lots of bug fixes
        (get_searchable_elements): new method
        (prepare): new method. Search is now done in 3 moves: create the
        searcher object, prepare the search, and run the search

        * Value.pm: removed unique_value parameter which was a bad idea
        for a check list implementation. Moved reference handling into new
        IdElementReference class

        * IdElementReference.pm: New class extracted from Value object so
        reference can be used also by CheckList

        * CheckList.pm: re-wrote as a "check_list" type and not a "list"
        type

2007-04-27  Dominique Dumont  

        * Instance.pm (reset_config): new method
        (searcher): renamed search_element to
        searcher. searcher retunrs a Config::Model::Searcher object.
        
        * AnyThing.pm (searcher): renamed search_element to
        searcher. searcher retunrs a Config::Model::Searcher object.

        * AnyId.pm (copy): new method to deep-copy the content of a hash
        or id element.

2007-04-13  Dominique Dumont  

        * Value.pm: moved out reference facility in
        Config::Model::IdElementReference

2007-03-16  Dominique Dumont  

        * Value.pm (fetch_no_check): new method

2007-02-23  Dominique Dumont  v0.608

        * ObjTreeScanner.pm: Clarified call-back names.

2007-01-12  Dominique Dumont  v0.607

        * t/term_ui.t: Changed tests to try to load Term::ReadLine and
        skip tests if Term::ReadLine cannot be loaded.

2007-01-11  Dominique Dumont  v0.606

        * config-model: Corrected wrong doc for options.

        * Describe.pm: Small cosmetic changes in output.

2007-01-08  Dominique Dumont  v0.605

        * config-model: Now uses Log::Log4perl. (Still need to use
        Log4perl for all *.pm files though). Now write config files back.
        Added option to read and write config in test directories.

        * *.pm: Changed e-mail address to reduce spam.

        * *.pm: Small bug and doc fixes.
        
2006-12-08  Dominique Dumont 

        * Model.pm (load): Model files are expected to be delivered as
        Perl module and are searched using @INC. (E.g. Xorg.pl model will
        be searched as Config/Model/models/Xorg.pl in @INC elements)

        * Exception.pm (full_message): Clarified error message of
        RestrictedElement exception

        * examples/fstab/fstab_test.pl: Clarified notifications shown to
        user. Adapted to changes of 0.604

2006-12-06  Dominique Dumont   v0.604

        * Node.pm: added check_list in possible element of a node.

        * Value.pm (set): Changed reference declaration: now value_type
        must be set to 'reference' when using 'refer_to' parameter.

        * WarpedThing.pm: can group rules declaration in warp argument to
        save typing

        * WizardHelper.pm: adapted for ObjTreeScanner changes

2006-12-05  Dominique Dumont  

        * ObjTreeScanner.pm: Modified the callback signature so the user
        does no longer have to play with closures.
        - added check_list_cb for CheckList elements
        - improved doc
        - added callback example in doc

        * AutoRead.pm (auto_write_init): bug fix in auto_write functions

        * AnyId.pm (new): New allow and allow_from parameters to set
        "allowed" keys of a hash or list. This list of allowed keys can be
        fixed or dynamic.

        * AnyThing.pm (root): new method. Returns the root node of the
        configuration tree.
        (grab): bug fix so hash identifier can contain white spaces when
        calling grab (e.g. InputDevice:"Configured Mouse")

        * CheckList.pm: New class to implement a check list. 

        * Describe.pm: adapted for ObjTreeScanner changes and new
        CheckList element type

        * Dumper.pm: idem

        * Report.pm: idem

2006-10-19  Dominique Dumont   v0.603

        * Value.pm (set): forbids to specify both 'refer_to' and
        'value_type' in value declaration

2006-10-11  Dominique Dumont  

        * Loader.pm (load): Accepts now to load configuration data where
        index can contain white space. (e.g. Monitor:"Hercules Pro")

        * AnyId.pm: changed 'element_args' to 'cargo_args'. Changed
        'element_class' to 'cargo_class'. Added 'follow' parameter so a
        hash key can mimic the keys of another hash in the configuration
        tree.

        * TermUI.pm: removed debug print. This makes auto-completion much
        easier to understand ;-)

2006-09-26  Dominique Dumont  

        * Value.pm (set_default): added built_in default
        parameter. Built_in default parameter are not written in
        configuration files but can be used to audit configuration data.
        
        * AutoRead.pm (auto_read_init): bug fix: override of read_dir was
        not taken into account
        (auto_write_init): idem for write_dir

2006-09-22  Dominique Dumont  

        * Instance.pm: added doc for the possibility to specify where to
        read or write the configuration files.

2006-09-21  Dominique Dumont  

        * AnyId.pm (move): also change index value when moving items.

2006-09-07  Dominique Dumont   v0.602

        * config-model: added -help and -man options to command line

        * Model.pm (load): model file now must return an array ref and not
        invoke Model methods. See t/big_model.pm for an example
        (load): can load model file for model class that contain '::'. In
        this case the model file is searched in a sub-directory just like
        a perl class (E.g Model::Foo -> Model/Foo.pm)

        * HashId.pm (create_default): can initialise children nodes while
        creating default keys. (Necessary to be able to write a
        configuration model for Xorg)

        * AnyId.pm (move): new method

2006-07-20  Dominique Dumont   v0.601

        * config-model: new program. This programs can be invoked to
        modify configuration files (provided the corresponding model is
        available in /etc/config-model.d). (Still shaky. Don't run as
        root)

2006-07-19  Dominique Dumont  

        * Node.pm (get_type): new method
        (get_cargo_type): new method
        (get_element_name): added type and cargo_type parameters to filter
        returned element depending on their type or cargo (contained) type
        (describe): new method. Uses new Describe.pm file

        * Value.pm (get_type): new method
        (get_cargo_type): new method

2006-07-18  Dominique Dumont  

        * Model.pm (load): new method. Model can load model declaration
        from /etc/config-model.d. The model must be valid perl script that
        ends with an array ref containing configuraiton class declaration
        like the one accepted by create_config_class

        * ListId.pm (get_type): new method

        * HashId.pm (get_type): new method

        * Exception.pm : Added WrongType exception for new grab parameters

        * AnyThing.pm (get_type): New method
        (grab): added strict, autoadd, type parameter.

        * AnyId.pm (get_cargo_type): new method.
        (config_class_name): new mehtod

        * Describe.pm: New file. Provides a human readable description of
        a configuration node.

2006-06-15  Dominique Dumont   v0.507

        * TermUI.pm: New file. Provides a shell like interactive user
        interface.

        * Node.pm: Now inherit AutoRead class

        * Instance.pm: Adapted for auto read/write.

2006-06-12  Dominique Dumont   

        * AutoRead.pm: New file. Provides node the capabilities to load
        config data when creating a configuration node.

2006-05-19  Dominique Dumont   v0.506

        * examples/fstab/FstabModel.pl: added Fstab example with its fstab
        configuration model. This example includes a small program that
        use this model to show some ways to extract configuration
        informations.

2006-05-17  Dominique Dumont   

        * Report.pm: new file. Provides report and audit facility for
        Node.pm

        * Node.pm (report): new method
        (audit): new method

        * Model.pm (create_config_class): added inheritance of
        configuration models.

        * HashId.pm (_get_all_indexes): sort returned indexes

        * Dumper.pm (dump_tree): fix list dump which did not work

        * AnyId.pm (fetch_all_values): new method

2006-04-21  Dominique Dumont   v0.505

        * WizardHelper.pm: New file. This class helps to create wizard
        widget for config models

        * Makefile.PL: ValueFormula is no longer compiled at build-time
        but on the fly at run-time. Hopefully this will fix Windows
        problem and ease integration downstream for a minor performance
        penalty at start time.

2006-04-10  Dominique Dumont   v0.504

        * Searcher.pm: Added search element feature. This feature provides
        a way to search for a configuration element in a configuration
        tree. The search can be launcher from an instance or any node of a
        configuration tree. Getting to searched target can be manual or
        automatic (with call-backs provided by user)

2006-03-21  Dominique Dumont  

        * Makefile.PL: Changed grammar pre-compilation to add a "1;" at
        the end of ValueFormulaParser.pm (Makes Windows happy)

2006-03-16  Dominique Dumont   v0.503

        * Makefile.PL (MY::postamble): Corrected CPAN dependencies

